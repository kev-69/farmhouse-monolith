# Docker setup for Postgres + app container
version: "3.8"
services:
  api:
    build:
      context: .. # Go up one directory to project root
      dockerfile: docker/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DB_URL=postgresql://postgres:${DB_PASSWORD}@postgres:5432/farmhouse_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - PORT=3000
      - NODE_ENV=development
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}

  postgres:
    image: postgres:15.0-alpine
    container_name: postgres-farmhouse
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: farmhouse_db
    volumes:
      - postgres_data:/var/lib/postgresql/data # Correctly map named volume
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0.11-alpine
    container_name: redis-farmhouse
    restart: always
    volumes:
      - redis_data:/data # Correctly map named volume
    ports:
      - "6378:6379"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
